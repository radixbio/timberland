job "${prefix}retool-pg-kafka-connector" {
  all_at_once = false
  datacenters = ["dc1"]

  group "connector" {
    count = 1

    task "retool-postgres-kafka-connector" {

      config {
        image = "appropriate/curl"
        auth_soft_fail = false
        command = "/local/start.sh"
        hostname = "$${attr.unique.hostname}-rt-pg-kafka-connect"
        privileged = false
        network_mode = "weave"
        cap_add = []
      }

      driver = "docker"
      kill_timeout = "5s"
      kill_signal = "SIGINT"
      leader = false

      resources {
        cpu = 1000
        memory = 100

        network {
          mbits = 10
        }
      }

      shutdown_delay = "0s"

      template {
        change_mode = "noop"
        destination = "local/start.sh"
        env = false
        left_delimiter = "{{"
        perms = "755"
        right_delimiter = "}}"
        splay = "5s"
        vault_grace = "15s"
        data = <<-EOH
          #!/usr/bin/env ash

          command="curl -X PUT \
          http://${prefix}kc-daemons-companions-connect.service.consul:8083/connectors/retool-postgres/config \
          -H 'Content-Type: application/json' \
          -H 'Accept: application/json' \
          -d '{
          \"connector.class\": \"io.confluent.connect.jdbc.JdbcSourceConnector\",
          \"type.name\": \"radix\",
          \"offset.flush.interval.ms\": \"1000\",
          \"value.converter.schema.registry.url\": \"http://${prefix}kc-daemons-companions-schema-registry.service.consul:8081/\",
          \"topics.regex\": \".*-journal\",
          \"tasks.max\": \"1\",
          \"topic.prefix\": \"retool-postgres-\",
          \"mode\": \"bulk\",
          \"errors.tolerance\": \"all\",
          \"connection.url\": \"jdbc:postgresql://${prefix}retool-retool-postgres.service.consul:5432?user=retool_internal_user&password=retool\",
          \"value.converter\": \"io.confluent.connect.avro.AvroConverter\",
          \"key.converter\": \"org.apache.kafka.connect.storage.StringConverter\"
          }'"

          eval $command

          while [ $? -ne 0 ]; do sleep 2; eval $command; done
        EOH
      }
    }
  }

  namespace = "default"
  priority = 50
  region = "global"
  type = "batch"
}

