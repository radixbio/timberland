job "${prefix}s3lts" {
  all_at_once = false
  datacenters = ["dc1"]

  group "s3lts" {
    count = 1

    task "s3lts" {

      vault {
        policies = ["read-consul-ui"]

        change_mode = "signal"
        change_signal = "SIGUSR1"
      }

      template {
        data = <<EOF
      {{with secret "consul-ui-token"}}
      {{ if .Data.token}}
            CONSUL_HTTP_TOKEN = "{{.Data.token}}"
      {{else}}
      	    CONSUL_HTTP_TOKEN = ""
      {{end}}
      {{end}}
    EOF
        destination = "secrets/file.env"
        env = true
      }

      config {
        image = "registry.gitlab.com/radix-labs/monorepo/utils/s3lts:master"
        auth_soft_fail = false
        hostname = "${prefix}minio-syncer-$${NOMAD_ALLOC_INDEX}"
        network_mode = "weave"
        port_map = {"cluster" = 2552}
      }

      driver = "docker"
      env = {
        "MINIO_REMOTE_HOSTPORT" = "${prefix}mockminio.service.consul:9000",
        "MINIO_LOCAL_HOSTPORT" = "${prefix}minio-job-minio-group-minio-local.service.consul:9000",
        "HOSTNAME" = "${prefix}runtime-minio-syncer-$${NOMAD_ALLOC_INDEX}.service.consul",
        "SECRETACCESSKEY" = "minio-secret-key",
        "KAFKA_BOOTSTRAP_SERVERS" = "PLAINTEXT://${prefix}kafka-daemons-kafka-kafka.service.consul:29092",
        "ACCESSKEYID" = "minio-access-key",
        "AVRO_SCHEMA_REGISTRY_URL" = "http://${prefix}kc-daemons-companions-schema-registry.service.consul:8081",
        "TARGET_BUCKET_NAME" = "radix-userdata-test",
        "TCP_AKKA_PORT" = "2552"
      }
      kill_timeout = "10s"
      kill_signal = "SIGINT"
      leader = false

      resources {
        cpu = 100
        memory = 512

        network {
          mbits = 10
          port "cluster" {}
        }
      }

      service {
        name = "${prefix}runtime-minio-syncer-$${NOMAD_ALLOC_INDEX}"
        port = "cluster"
        address_mode = "auto"
      }
      shutdown_delay = "0s"
    }

    task "s3-remote-mock" {

      config {
        image = "minio/minio:latest"
        args = ["server","/data"]
        auth_soft_fail = false
        entrypoint = ["minio"]
        network_mode = "weave"
        port_map = {"minio_remote" = 9000}
      }

      driver = "docker"
      env = {
        "MINIO_SECRET_KEY" = "minio-secret-key",
        "MINIO_ACCESS_KEY" = "minio-access-key"
      }
      kill_timeout = "10s"
      kill_signal = "SIGINT"
      leader = false

      resources {
        cpu = 100
        memory = 1024

        network {
          mbits = 10

          port "minio_remote" {}
        }
      }

      service {
        name = "mockminio"
        port = "minio_remote"
        address_mode = "auto"

        check {
          address_mode = "host"
          grpc_use_tls = true
          initial_status = "critical"
          interval = "1s"
          method = "GET"
          port = "minio_remote"
          protocol = "http"
          timeout = "10s"
          type = "tcp"
          tls_skip_verify = false
        }
      }

      shutdown_delay = "0s"
    }
  }

  namespace = "default"
  priority = 50
  region = "global"
  type = "service"
}
