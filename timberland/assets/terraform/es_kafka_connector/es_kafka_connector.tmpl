job "es-kafka-connector" {
  namespace = "${namespace}"
  all_at_once = false
  datacenters = ["dc1"]

  group "connector" {
    count = 1

    task "elasticsearch-kafka-connector" {

      config {
        image = "appropriate/curl"
        auth_soft_fail = false
        command = "/local/start.sh"
        privileged = false
        cap_add = []
        mounts = [
          {
            type = "bind"
            target = "/local/connector_config.json"
            source = "/opt/radix/utils/es_conn_config.json"
            readonly = true
          }
        ]
      }

      driver = "docker"
      kill_timeout = "5s"
      kill_signal = "SIGINT"
      leader = false

      resources {
        cpu = 1000
        memory = 100
      }

      shutdown_delay = "0s"

      template {
        change_mode = "noop"
        destination = "local/start.sh"
        env = false
        left_delimiter = "{{"
        perms = "755"
        right_delimiter = "}}"
        splay = "5s"
        data = <<EOH
        #!/usr/bin/env ash

        env

        command="curl -X POST \
        http://127.0.0.1:8083/connectors \
        -H 'Content-Type: application/json' \
        -H 'Accept: application/json' \
        -d @/local/connector_config.json"

        eval $command

        while [[ $? -ne 0 ]]; do sleep 2; eval $command; done
        EOH
      }
    }

    network {
      mbits = 10
      mode = "bridge"
    }

    service {
      name = "es-kafka-connector-service"
      port = 8080
      tags = ["es-connect", "system"]
      address_mode = "auto"

      connect {
        sidecar_service {
          proxy {
            upstreams {
              destination_name = "kc-connect-service-0"
              local_bind_port = 8083
            }

            upstreams {
              destination_name = "kc-schema-registry-service-0"
              local_bind_port = 8081
            }

            upstreams {
              destination_name = "es-rest-0"
              local_bind_port = 9200
            }
          }
        }
      }
    }
  }

  priority = 50
  region = "global"
  type = "batch"
}